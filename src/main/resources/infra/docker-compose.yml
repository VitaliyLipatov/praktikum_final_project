version: "3.5"
services:
  zookeeper-source:
    image: confluentinc/cp-zookeeper:7.4.4
    restart: always
    container_name: zookeeper-source
    hostname: zookeeper-source
    ports:
      - "2181:2181"
    volumes:
      - data-zookeeper-log-1:/var/lib/zookeeper/log
      - data-zookeeper-data-1:/var/lib/zookeeper/data
      - ./etc/zookeeper/secrets/zookeeper.sasl.jaas.conf:/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
    networks:
      - confluent
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_REQUIRE_CLIENT_AUTH_SCHEME: "sasl"
      ZOOKEEPER_AUTH_PROVIDER_1: "org.apache.zookeeper.server.auth.SASLAuthenticationProvider"
      ZOOKEEPER_SASL_ENABLED: "true"
      KAFKA_OPTS:
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper.sasl.jaas.conf
        -Dquorum.cnxn.threads.size=20
        -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
        -Dzookeeper.allowSaslFailedClients=false
        -DjaasLoginRenew=3600000

  kafka-0:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-0
    hostname: kafka-0
    depends_on:
      - zookeeper-source
    ports:
      - "9093:9093"
      - "9082:9082"
    networks:
      - confluent
    volumes:
      - data-kafka-0:/var/lib/kafka/data
      - ./kafka-0-creds/etc/kafka/secrets:/etc/kafka/secrets
      - ./etc/kafka/jaas:/etc/kafka/jaas
      - ./kafka-0-creds/properties/client-ssl.properties:/properties/client-ssl.properties
      - ./config/server.properties:/etc/kafka/server.properties
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-source:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9082,SASL_SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9082,SASL_SSL://127.0.0.1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-0.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-0_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-0_keystore_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-0.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-0_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

  kafka-1:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper-source
    ports:
      - "9095:9095"
      - "9083:9083"
    networks:
      - confluent
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./kafka-1-creds/etc/kafka/secrets:/etc/kafka/secrets
      - ./etc/kafka/jaas:/etc/kafka/jaas
      - ./kafka-1-creds/properties/client-ssl.properties:/properties/client-ssl.properties
      - ./config/server.properties:/etc/kafka/server.properties
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-source:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9083,SASL_SSL://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9083,SASL_SSL://127.0.0.1:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-1_keystore_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

  kafka-2:
    image: confluentinc/cp-kafka:7.4.4
    restart: always
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper-source
    ports:
      - "9097:9097"
      - "9084:9084"
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./kafka-2-creds/etc/kafka/secrets:/etc/kafka/secrets
      - ./etc/kafka/jaas:/etc/kafka/jaas
      - ./kafka-2-creds/properties/client-ssl.properties:/properties/client-ssl.properties
      - ./config/server.properties:/etc/kafka/server.properties
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-source:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9084,SASL_SSL://0.0.0.0:9097
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9084,SASL_SSL://127.0.0.1:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SUPER_USERS: "User:admin"
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server_jaas.conf"
      KAFKA_SSL_KEYSTORE_FILENAME: kafka-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: kafka-2_keystore_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.kafka-2.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka-2_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: https

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    ports:
      - '127.0.0.1:8083:8083'
    depends_on:
      - zookeeper-source
      - kafka-0
      - kafka-1
      - kafka-2
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8083
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-0:9082,PLAINTEXT://kafka-1:9083,PLAINTEXT://kafka-2:9084
    networks:
      - confluent

  zookeeper-destination:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper-destination
    container_name: zookeeper-destination
    ports:
      - "2182:2182"
    networks:
      - confluent
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182

  kafka-destination-0:
    image: confluentinc/cp-kafka
    hostname: kafka-destination-0
    container_name: kafka-destination-0
    networks:
      - confluent
    depends_on:
      - zookeeper-destination
    ports:
      - "9193:9193"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-destination:2182'
      KAFKA_LISTENERS: PLAINTEXT://:9193
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-destination-0:9193
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-destination-1:
    image: confluentinc/cp-kafka
    hostname: kafka-destination-1
    container_name: kafka-destination-1
    networks:
      - confluent
    depends_on:
      - zookeeper-destination
    ports:
      - "9195:9195"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-destination:2182'
      KAFKA_LISTENERS: PLAINTEXT://:9195
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-destination-1:9195
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-destination-2:
    image: confluentinc/cp-kafka
    hostname: kafka-destination-2
    container_name: kafka-destination-2
    networks:
      - confluent
    depends_on:
      - zookeeper-destination
    ports:
      - "9197:9197"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-destination:2182'
      KAFKA_LISTENERS: PLAINTEXT://:9197
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-destination-2:9197
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mirror-maker:
    image: confluentinc/cp-kafka
    networks:
      - confluent
    volumes:
      - ./consumer.cfg:/etc/consumer.cfg
      - ./producer.cfg:/etc/producer.cfg
    command: bash -c "kafka-mirror-maker --consumer.config /etc/consumer.cfg --producer.config /etc/producer.cfg --whitelist products --num.streams 1"
    depends_on:
      - kafka-0
      - kafka-destination-0
      - zookeeper-destination

  kafka-ui:
    image: provectuslabs/kafka-ui
    depends_on:
      - mirror-maker
    networks:
      - confluent
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0:9082
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_1_NAME: local2
      KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: kafka-destination-0:9193
      KAFKA_CLUSTERS_1_ZOOKEEPER: zookeeper:2182

networks:
  proxynet:
    name: custom_network
  confluent:

volumes:
  data-zookeeper-log-1:
  data-zookeeper-data-1:
  data-kafka-0:
  data-kafka-1:
  data-kafka-2: